{"mappings":"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4C,UAAUh5D,KAAK4N,OAAOlE;aAExC0sD,aAAap2D,KAAKpJ,SAASoJ,OAAO0J;QAEpC0sD,aAAa,IAAI,CAAC3oD,OAAO/P,MAAM04D;QAE/B,OAAOA;IACT;IAMAuB,mBAAmBt6D,KAAK,EAAE;QACxB,OAAO,AAACg3C,CAAAA,YAAY,IAAI,CAACmlB,QAAQn8D,SAAS,IAAI,CAACo8D,OAAAA,IAAW,IAAI,CAACC;IACjE;IAMA7lD,iBAAiB8iB,KAAK,EAAE;QACtB,MAAM4hC,UAAU,IAAI,CAACxB;QACrB,MAAMngC,UAAU,IAAI,CAACG,mBAAmBJ,SAAS4hC,QAAQz/D,SAASy/D,QAAQv6D;QAC1E,OAAOq2C,YAAY,IAAI,CAACmlB,QAAQ5iC,UAAU,IAAI,CAAC8iC,cAAc,IAAI,CAACD,SAAS;IAC7E;AACF;A,I,S,W,G,O,O;I,W;I,e;I,a;I,kB;I,mB;I,W;I,iB;A;ACxIaI,MAAAA,gBAAgB;IAC3B57B;IACAn0B;IACAiN;IACAvU;C;;;A;;;;;C;;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,uC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-70386d150f0e7a62.js","src/acquisitions.js","node_modules/chart.js/auto/auto.js","node_modules/chart.js/dist/chart.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/src/index.ts","node_modules/chart.js/dist/chunks/helpers.segment.js","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.ts","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.ts","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/@kurkle/color/dist/color.esm.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"933d9c51a521242b\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import Chart from 'chart.js/auto'\n//import { getAquisitionsByYear } from './api'\n//import Item from '../../models/dataItem.js'\n\nvar yakseli = [];\nvar xakseliTuotto = []\nvar xakseliLampo = []\nvar xakseliHinta = []\n/*\nvar ss = Item.find({})//createdAt: {$gt: start, $lt: end}}).exec()\nss.array.forEach(element => {\n  yakseli.push(element.createdAt)\n  xakseliTuotto.push(element.tuotto)\n});\n*/\n\nconst data = [\n  { year: 2010, count: 10 },\n  { year: 2011, count: 20 },\n  { year: 2012, count: 15 },\n  { year: 2013, count: 25 },\n  { year: 2014, count: 22 },\n  { year: 2015, count: 30 },\n  { year: 2016, count: 28 },\n];\n\n(async function() {\n    const options = {\n        method: \"POST\",\n      //  body: {\n       //     \"alku\": \"2023-06-15T05:00:00.000Z\",\n         //   \"loppu\": \"2023-07-15T17:59:00.000Z\"\n          //},\n        headers: {\n\n            \"Connection\": \"keep-alive\",\n            \"Transfer-Encoding\": \"chunked\",      \n            \"Content-Type\": \"application/json\",\n            \"accept\": \"application/json\",\n            \"Acces-Control-Allow-Origin\": \"*\",   \n            \"Access-Control-Allow-Headers\": \"*\",\n          //'www-authenticate': 'Basic',\n          //\"authorization\": auth,\n        }\n        }\n\n  const getData  = async (url) => {\n    const res = await fetch(url, options);\n    const data = await res.text()\n    return data\n  }\n\n  const modifyValue = async (startValue) => {\n    const replaced = await startValue.replace(\",\", \".\")\n    const modifiedValue = Number(replaced)\n    return modifiedValue;\n  }\n\n\n  var result = await getData('http://127.0.0.1:2000/getdata')\n  result = JSON.parse(result);\n  for(var i in result) {\n    xakseliTuotto.push(result[i].tuotto)\n    xakseliLampo.push(result[i].lampo)\n    xakseliHinta.push(result[i].lampo)\n   // xakseliTuotto.push(result[i].tuotto);\n    yakseli.push(result[i].createdAt)\n  }\n\n  console.log(xakseliTuotto)\n  new Chart(\n    document.getElementById('acquisitions'),\n    {\n      type: 'line',\n      scales: {\n        y: {\n          ticks: {\n            // For a category axis, the val is the index so the lookup via getLabelForValue is needed\n            callback: function(val, index) {\n              // Hide every 2nd tick label\n              return index % 3 === 0 ? this.getLabelForValue(val) : 'hhh';\n            },\n          },\n          // The axis for this scale is determined from the first letter of the id as `'x'`\n          // It is recommended to specify `position` and / or `axis` explicitly.\n          type: 'time',\n        },\n      },\n      options: {\n        tension: 2,\n        borderWidth: 1,\n        pointRadius: 0,\n        animation: true,\n        plugins: {\n          legend: {\n            display: true\n          },\n          tooltip: {\n            enabled: false\n          }\n        }\n      },\n      data: {\n        labels: yakseli,//data.map(row => row.year),\n        datasets: [\n          {\n            label: 'Tuotto',\n            data: xakseliTuotto// data.map(row => row.count)\n          },\n          {\n            label: 'Hinta',\n            data: xakseliHinta,\n          },\n          {\n            label: 'Lämpötila',\n            data: xakseliLampo\n          }\n        ]\n      }\n    }\n  );\n})();\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n",null,"import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n",null,"/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","toString","isNumberFinite","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","clone","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","_deprecated","keyResolvers","_splitKey","tmp","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","niceFraction","n","rounded","degrees","radians","isFiniteNumber","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","pixelSize","fontStyle","fontFamily","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","check","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","saturate","darken","colors","applyAnimationsDefaults","applyLayoutsDefaults","intlCache","getNumberFormat","JSON","stringify","Intl","NumberFormat","num","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","applyScaleDefaults","getScope","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","strokeText","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","parseInt","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","_resolveWithContext","_allKeys","readKey","needsSubResolver","_resolveScriptable","_resolveArray","getValue","createSubResolver","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","splineCurveMonotone","slopeDelta","capControlPoint","inArea","inAreaPrev","inAreaNext","controlPoints","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","touches","getBoundingClientRect","clientX","clientY","borderBox","paddings","borders","getContainerSize","clientHeight","containerStyle","containerBorder","containerPadding","round1","bbWidth","bbHeight","containerSize","maintainHeight","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","getSegment","startBound","endBound","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","sub","findStartAndEnd","solidSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","replacer"],"version":3,"file":"index.a521242b.js.map","sourceRoot":"/__parcel_source_root/"}